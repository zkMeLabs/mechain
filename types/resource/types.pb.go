// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mechain/resource/types.proto

package resource

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResourceType int32

const (
	RESOURCE_TYPE_UNSPECIFIED ResourceType = 0
	RESOURCE_TYPE_BUCKET      ResourceType = 1
	RESOURCE_TYPE_OBJECT      ResourceType = 2
	RESOURCE_TYPE_GROUP       ResourceType = 3
)

var ResourceType_name = map[int32]string{
	0: "RESOURCE_TYPE_UNSPECIFIED",
	1: "RESOURCE_TYPE_BUCKET",
	2: "RESOURCE_TYPE_OBJECT",
	3: "RESOURCE_TYPE_GROUP",
}

var ResourceType_value = map[string]int32{
	"RESOURCE_TYPE_UNSPECIFIED": 0,
	"RESOURCE_TYPE_BUCKET":      1,
	"RESOURCE_TYPE_OBJECT":      2,
	"RESOURCE_TYPE_GROUP":       3,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}

func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8d52059eb79b5dfd, []int{0}
}

func init() {
	proto.RegisterEnum("mechain.resource.ResourceType", ResourceType_name, ResourceType_value)
}

func init() { proto.RegisterFile("mechain/resource/types.proto", fileDescriptor_8d52059eb79b5dfd) }

var fileDescriptor_8d52059eb79b5dfd = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc9, 0x4d, 0x4d, 0xce,
	0x48, 0xcc, 0xcc, 0xd3, 0x2f, 0x4a, 0x2d, 0xce, 0x2f, 0x2d, 0x4a, 0x4e, 0xd5, 0x2f, 0xa9, 0x2c,
	0x48, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x80, 0xca, 0xea, 0xc1, 0x64, 0xa5,
	0x24, 0x93, 0xf3, 0x8b, 0x73, 0xf3, 0x8b, 0xe3, 0xc1, 0xf2, 0xfa, 0x10, 0x0e, 0x44, 0xb1, 0x94,
	0x48, 0x7a, 0x7e, 0x7a, 0x3e, 0x44, 0x1c, 0xc4, 0x82, 0x88, 0x6a, 0x35, 0x30, 0x72, 0xf1, 0x04,
	0x41, 0x75, 0x87, 0x54, 0x16, 0xa4, 0x0a, 0xc9, 0x72, 0x49, 0x06, 0xb9, 0x06, 0xfb, 0x87, 0x06,
	0x39, 0xbb, 0xc6, 0x87, 0x44, 0x06, 0xb8, 0xc6, 0x87, 0xfa, 0x05, 0x07, 0xb8, 0x3a, 0x7b, 0xba,
	0x79, 0xba, 0xba, 0x08, 0x30, 0x08, 0x49, 0x70, 0x89, 0xa0, 0x4a, 0x3b, 0x85, 0x3a, 0x7b, 0xbb,
	0x86, 0x08, 0x30, 0x62, 0xca, 0xf8, 0x3b, 0x79, 0xb9, 0x3a, 0x87, 0x08, 0x30, 0x09, 0x89, 0x73,
	0x09, 0xa3, 0xca, 0xb8, 0x07, 0xf9, 0x87, 0x06, 0x08, 0x30, 0x4b, 0xb1, 0x74, 0x2c, 0x96, 0x63,
	0x70, 0x72, 0x3e, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27,
	0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xcd, 0xf4, 0xcc,
	0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0xd4, 0xb2, 0xdc, 0xfc, 0x62, 0x28, 0x59,
	0x66, 0x68, 0x04, 0x09, 0x07, 0x78, 0xb0, 0x24, 0xb1, 0x81, 0xbd, 0x63, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x36, 0xd2, 0x84, 0xa6, 0x31, 0x01, 0x00, 0x00,
}
