// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: greenfield/storage/params.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Params defines the parameters for the module.
type Params struct {
	VersionedParams VersionedParams `protobuf:"bytes,1,opt,name=versioned_params,json=versionedParams,proto3" json:"versioned_params"`
	// max_payload_size is the maximum size of the payload, default: 2G
	MaxPayloadSize uint64 `protobuf:"varint,2,opt,name=max_payload_size,json=maxPayloadSize,proto3" json:"max_payload_size,omitempty"`
	// relayer fee for the mirror bucket tx to bsc
	BscMirrorBucketRelayerFee string `protobuf:"bytes,3,opt,name=bsc_mirror_bucket_relayer_fee,json=bscMirrorBucketRelayerFee,proto3" json:"bsc_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to bsc
	BscMirrorBucketAckRelayerFee string `protobuf:"bytes,4,opt,name=bsc_mirror_bucket_ack_relayer_fee,json=bscMirrorBucketAckRelayerFee,proto3" json:"bsc_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to bsc
	BscMirrorObjectRelayerFee string `protobuf:"bytes,5,opt,name=bsc_mirror_object_relayer_fee,json=bscMirrorObjectRelayerFee,proto3" json:"bsc_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to bsc
	BscMirrorObjectAckRelayerFee string `protobuf:"bytes,6,opt,name=bsc_mirror_object_ack_relayer_fee,json=bscMirrorObjectAckRelayerFee,proto3" json:"bsc_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to bsc
	BscMirrorGroupRelayerFee string `protobuf:"bytes,7,opt,name=bsc_mirror_group_relayer_fee,json=bscMirrorGroupRelayerFee,proto3" json:"bsc_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to bsc
	BscMirrorGroupAckRelayerFee string `protobuf:"bytes,8,opt,name=bsc_mirror_group_ack_relayer_fee,json=bscMirrorGroupAckRelayerFee,proto3" json:"bsc_mirror_group_ack_relayer_fee,omitempty"`
	// The maximum number of buckets that can be created per account
	MaxBucketsPerAccount uint32 `protobuf:"varint,9,opt,name=max_buckets_per_account,json=maxBucketsPerAccount,proto3" json:"max_buckets_per_account,omitempty"`
	// The window to count the discontinued objects or buckets
	DiscontinueCountingWindow uint64 `protobuf:"varint,10,opt,name=discontinue_counting_window,json=discontinueCountingWindow,proto3" json:"discontinue_counting_window,omitempty"`
	// The max objects can be requested in a window
	DiscontinueObjectMax uint64 `protobuf:"varint,11,opt,name=discontinue_object_max,json=discontinueObjectMax,proto3" json:"discontinue_object_max,omitempty"`
	// The max buckets can be requested in a window
	DiscontinueBucketMax uint64 `protobuf:"varint,12,opt,name=discontinue_bucket_max,json=discontinueBucketMax,proto3" json:"discontinue_bucket_max,omitempty"`
	// The object will be deleted after the confirm period in seconds
	DiscontinueConfirmPeriod int64 `protobuf:"varint,13,opt,name=discontinue_confirm_period,json=discontinueConfirmPeriod,proto3" json:"discontinue_confirm_period,omitempty"`
	// The max delete objects in each end block
	DiscontinueDeletionMax uint64 `protobuf:"varint,14,opt,name=discontinue_deletion_max,json=discontinueDeletionMax,proto3" json:"discontinue_deletion_max,omitempty"`
	// The max number for deleting policy in each end block
	StalePolicyCleanupMax uint64 `protobuf:"varint,15,opt,name=stale_policy_cleanup_max,json=stalePolicyCleanupMax,proto3" json:"stale_policy_cleanup_max,omitempty"`
	// The min interval for making quota smaller in seconds
	MinQuotaUpdateInterval uint64 `protobuf:"varint,16,opt,name=min_quota_update_interval,json=minQuotaUpdateInterval,proto3" json:"min_quota_update_interval,omitempty"`
	// the max number of local virtual group per bucket
	MaxLocalVirtualGroupNumPerBucket uint32 `protobuf:"varint,17,opt,name=max_local_virtual_group_num_per_bucket,json=maxLocalVirtualGroupNumPerBucket,proto3" json:"max_local_virtual_group_num_per_bucket,omitempty"`
	// relayer fee for the mirror bucket tx to op chain
	OpMirrorBucketRelayerFee string `protobuf:"bytes,18,opt,name=op_mirror_bucket_relayer_fee,json=opMirrorBucketRelayerFee,proto3" json:"op_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to op chain
	OpMirrorBucketAckRelayerFee string `protobuf:"bytes,19,opt,name=op_mirror_bucket_ack_relayer_fee,json=opMirrorBucketAckRelayerFee,proto3" json:"op_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to op chain
	OpMirrorObjectRelayerFee string `protobuf:"bytes,20,opt,name=op_mirror_object_relayer_fee,json=opMirrorObjectRelayerFee,proto3" json:"op_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to op chain
	OpMirrorObjectAckRelayerFee string `protobuf:"bytes,21,opt,name=op_mirror_object_ack_relayer_fee,json=opMirrorObjectAckRelayerFee,proto3" json:"op_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to op chain
	OpMirrorGroupRelayerFee string `protobuf:"bytes,22,opt,name=op_mirror_group_relayer_fee,json=opMirrorGroupRelayerFee,proto3" json:"op_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to op chain
	OpMirrorGroupAckRelayerFee string `protobuf:"bytes,23,opt,name=op_mirror_group_ack_relayer_fee,json=opMirrorGroupAckRelayerFee,proto3" json:"op_mirror_group_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror bucket tx to polygon chain
	PolygonMirrorBucketRelayerFee string `protobuf:"bytes,24,opt,name=polygon_mirror_bucket_relayer_fee,json=polygonMirrorBucketRelayerFee,proto3" json:"polygon_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to polygon chain
	PolygonMirrorBucketAckRelayerFee string `protobuf:"bytes,25,opt,name=polygon_mirror_bucket_ack_relayer_fee,json=polygonMirrorBucketAckRelayerFee,proto3" json:"polygon_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to polygon chain
	PolygonMirrorObjectRelayerFee string `protobuf:"bytes,26,opt,name=polygon_mirror_object_relayer_fee,json=polygonMirrorObjectRelayerFee,proto3" json:"polygon_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to polygon chain
	PolygonMirrorObjectAckRelayerFee string `protobuf:"bytes,27,opt,name=polygon_mirror_object_ack_relayer_fee,json=polygonMirrorObjectAckRelayerFee,proto3" json:"polygon_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to polygon chain
	PolygonMirrorGroupRelayerFee string `protobuf:"bytes,28,opt,name=polygon_mirror_group_relayer_fee,json=polygonMirrorGroupRelayerFee,proto3" json:"polygon_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to polygon chain
	PolygonMirrorGroupAckRelayerFee string `protobuf:"bytes,29,opt,name=polygon_mirror_group_ack_relayer_fee,json=polygonMirrorGroupAckRelayerFee,proto3" json:"polygon_mirror_group_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror bucket tx to scroll chain
	ScrollMirrorBucketRelayerFee string `protobuf:"bytes,30,opt,name=scroll_mirror_bucket_relayer_fee,json=scrollMirrorBucketRelayerFee,proto3" json:"scroll_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to scroll chain
	ScrollMirrorBucketAckRelayerFee string `protobuf:"bytes,31,opt,name=scroll_mirror_bucket_ack_relayer_fee,json=scrollMirrorBucketAckRelayerFee,proto3" json:"scroll_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to scroll chain
	ScrollMirrorObjectRelayerFee string `protobuf:"bytes,32,opt,name=scroll_mirror_object_relayer_fee,json=scrollMirrorObjectRelayerFee,proto3" json:"scroll_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to scroll chain
	ScrollMirrorObjectAckRelayerFee string `protobuf:"bytes,33,opt,name=scroll_mirror_object_ack_relayer_fee,json=scrollMirrorObjectAckRelayerFee,proto3" json:"scroll_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to scroll chain
	ScrollMirrorGroupRelayerFee string `protobuf:"bytes,34,opt,name=scroll_mirror_group_relayer_fee,json=scrollMirrorGroupRelayerFee,proto3" json:"scroll_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to scroll chain
	ScrollMirrorGroupAckRelayerFee string `protobuf:"bytes,35,opt,name=scroll_mirror_group_ack_relayer_fee,json=scrollMirrorGroupAckRelayerFee,proto3" json:"scroll_mirror_group_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror bucket tx to linea chain
	LineaMirrorBucketRelayerFee string `protobuf:"bytes,36,opt,name=linea_mirror_bucket_relayer_fee,json=lineaMirrorBucketRelayerFee,proto3" json:"linea_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to linea chain
	LineaMirrorBucketAckRelayerFee string `protobuf:"bytes,37,opt,name=linea_mirror_bucket_ack_relayer_fee,json=lineaMirrorBucketAckRelayerFee,proto3" json:"linea_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to linea chain
	LineaMirrorObjectRelayerFee string `protobuf:"bytes,38,opt,name=linea_mirror_object_relayer_fee,json=lineaMirrorObjectRelayerFee,proto3" json:"linea_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to linea chain
	LineaMirrorObjectAckRelayerFee string `protobuf:"bytes,39,opt,name=linea_mirror_object_ack_relayer_fee,json=lineaMirrorObjectAckRelayerFee,proto3" json:"linea_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to linea chain
	LineaMirrorGroupRelayerFee string `protobuf:"bytes,40,opt,name=linea_mirror_group_relayer_fee,json=lineaMirrorGroupRelayerFee,proto3" json:"linea_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to linea chain
	LineaMirrorGroupAckRelayerFee string `protobuf:"bytes,41,opt,name=linea_mirror_group_ack_relayer_fee,json=lineaMirrorGroupAckRelayerFee,proto3" json:"linea_mirror_group_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror bucket tx to mantle chain
	MantleMirrorBucketRelayerFee string `protobuf:"bytes,42,opt,name=mantle_mirror_bucket_relayer_fee,json=mantleMirrorBucketRelayerFee,proto3" json:"mantle_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to mantle chain
	MantleMirrorBucketAckRelayerFee string `protobuf:"bytes,43,opt,name=mantle_mirror_bucket_ack_relayer_fee,json=mantleMirrorBucketAckRelayerFee,proto3" json:"mantle_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to mantle chain
	MantleMirrorObjectRelayerFee string `protobuf:"bytes,44,opt,name=mantle_mirror_object_relayer_fee,json=mantleMirrorObjectRelayerFee,proto3" json:"mantle_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to mantle chain
	MantleMirrorObjectAckRelayerFee string `protobuf:"bytes,45,opt,name=mantle_mirror_object_ack_relayer_fee,json=mantleMirrorObjectAckRelayerFee,proto3" json:"mantle_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to mantle chain
	MantleMirrorGroupRelayerFee string `protobuf:"bytes,46,opt,name=mantle_mirror_group_relayer_fee,json=mantleMirrorGroupRelayerFee,proto3" json:"mantle_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to mantle chain
	MantleMirrorGroupAckRelayerFee string `protobuf:"bytes,47,opt,name=mantle_mirror_group_ack_relayer_fee,json=mantleMirrorGroupAckRelayerFee,proto3" json:"mantle_mirror_group_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror bucket tx to arbitrum chain
	ArbitrumMirrorBucketRelayerFee string `protobuf:"bytes,48,opt,name=arbitrum_mirror_bucket_relayer_fee,json=arbitrumMirrorBucketRelayerFee,proto3" json:"arbitrum_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to arbitrum chain
	ArbitrumMirrorBucketAckRelayerFee string `protobuf:"bytes,49,opt,name=arbitrum_mirror_bucket_ack_relayer_fee,json=arbitrumMirrorBucketAckRelayerFee,proto3" json:"arbitrum_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to arbitrum chain
	ArbitrumMirrorObjectRelayerFee string `protobuf:"bytes,50,opt,name=arbitrum_mirror_object_relayer_fee,json=arbitrumMirrorObjectRelayerFee,proto3" json:"arbitrum_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to arbitrum chain
	ArbitrumMirrorObjectAckRelayerFee string `protobuf:"bytes,51,opt,name=arbitrum_mirror_object_ack_relayer_fee,json=arbitrumMirrorObjectAckRelayerFee,proto3" json:"arbitrum_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to arbitrum chain
	ArbitrumMirrorGroupRelayerFee string `protobuf:"bytes,52,opt,name=arbitrum_mirror_group_relayer_fee,json=arbitrumMirrorGroupRelayerFee,proto3" json:"arbitrum_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to arbitrum chain
	ArbitrumMirrorGroupAckRelayerFee string `protobuf:"bytes,53,opt,name=arbitrum_mirror_group_ack_relayer_fee,json=arbitrumMirrorGroupAckRelayerFee,proto3" json:"arbitrum_mirror_group_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror bucket tx to optimism chain
	OptimismMirrorBucketRelayerFee string `protobuf:"bytes,54,opt,name=optimism_mirror_bucket_relayer_fee,json=optimismMirrorBucketRelayerFee,proto3" json:"optimism_mirror_bucket_relayer_fee,omitempty"`
	// relayer fee for the ACK or FAIL_ACK package of the mirror bucket tx to optimism chain
	OptimismMirrorBucketAckRelayerFee string `protobuf:"bytes,55,opt,name=optimism_mirror_bucket_ack_relayer_fee,json=optimismMirrorBucketAckRelayerFee,proto3" json:"optimism_mirror_bucket_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to optimism chain
	OptimismMirrorObjectRelayerFee string `protobuf:"bytes,56,opt,name=optimism_mirror_object_relayer_fee,json=optimismMirrorObjectRelayerFee,proto3" json:"optimism_mirror_object_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to optimism chain
	OptimismMirrorObjectAckRelayerFee string `protobuf:"bytes,57,opt,name=optimism_mirror_object_ack_relayer_fee,json=optimismMirrorObjectAckRelayerFee,proto3" json:"optimism_mirror_object_ack_relayer_fee,omitempty"`
	// relayer fee for the mirror object tx to optimism chain
	OptimismMirrorGroupRelayerFee string `protobuf:"bytes,58,opt,name=optimism_mirror_group_relayer_fee,json=optimismMirrorGroupRelayerFee,proto3" json:"optimism_mirror_group_relayer_fee,omitempty"`
	// Relayer fee for the ACK or FAIL_ACK package of the mirror object tx to optimism chain
	OptimismMirrorGroupAckRelayerFee string `protobuf:"bytes,59,opt,name=optimism_mirror_group_ack_relayer_fee,json=optimismMirrorGroupAckRelayerFee,proto3" json:"optimism_mirror_group_ack_relayer_fee,omitempty"`
}

func (m *Params) Reset()      { *m = Params{} }
func (*Params) ProtoMessage() {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_127b8b1511d84eca, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetVersionedParams() VersionedParams {
	if m != nil {
		return m.VersionedParams
	}
	return VersionedParams{}
}

func (m *Params) GetMaxPayloadSize() uint64 {
	if m != nil {
		return m.MaxPayloadSize
	}
	return 0
}

func (m *Params) GetBscMirrorBucketRelayerFee() string {
	if m != nil {
		return m.BscMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetBscMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.BscMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetBscMirrorObjectRelayerFee() string {
	if m != nil {
		return m.BscMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetBscMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.BscMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetBscMirrorGroupRelayerFee() string {
	if m != nil {
		return m.BscMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetBscMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.BscMirrorGroupAckRelayerFee
	}
	return ""
}

func (m *Params) GetMaxBucketsPerAccount() uint32 {
	if m != nil {
		return m.MaxBucketsPerAccount
	}
	return 0
}

func (m *Params) GetDiscontinueCountingWindow() uint64 {
	if m != nil {
		return m.DiscontinueCountingWindow
	}
	return 0
}

func (m *Params) GetDiscontinueObjectMax() uint64 {
	if m != nil {
		return m.DiscontinueObjectMax
	}
	return 0
}

func (m *Params) GetDiscontinueBucketMax() uint64 {
	if m != nil {
		return m.DiscontinueBucketMax
	}
	return 0
}

func (m *Params) GetDiscontinueConfirmPeriod() int64 {
	if m != nil {
		return m.DiscontinueConfirmPeriod
	}
	return 0
}

func (m *Params) GetDiscontinueDeletionMax() uint64 {
	if m != nil {
		return m.DiscontinueDeletionMax
	}
	return 0
}

func (m *Params) GetStalePolicyCleanupMax() uint64 {
	if m != nil {
		return m.StalePolicyCleanupMax
	}
	return 0
}

func (m *Params) GetMinQuotaUpdateInterval() uint64 {
	if m != nil {
		return m.MinQuotaUpdateInterval
	}
	return 0
}

func (m *Params) GetMaxLocalVirtualGroupNumPerBucket() uint32 {
	if m != nil {
		return m.MaxLocalVirtualGroupNumPerBucket
	}
	return 0
}

func (m *Params) GetOpMirrorBucketRelayerFee() string {
	if m != nil {
		return m.OpMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetOpMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.OpMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetOpMirrorObjectRelayerFee() string {
	if m != nil {
		return m.OpMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetOpMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.OpMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetOpMirrorGroupRelayerFee() string {
	if m != nil {
		return m.OpMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetOpMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.OpMirrorGroupAckRelayerFee
	}
	return ""
}

func (m *Params) GetPolygonMirrorBucketRelayerFee() string {
	if m != nil {
		return m.PolygonMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetPolygonMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.PolygonMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetPolygonMirrorObjectRelayerFee() string {
	if m != nil {
		return m.PolygonMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetPolygonMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.PolygonMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetPolygonMirrorGroupRelayerFee() string {
	if m != nil {
		return m.PolygonMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetPolygonMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.PolygonMirrorGroupAckRelayerFee
	}
	return ""
}

func (m *Params) GetScrollMirrorBucketRelayerFee() string {
	if m != nil {
		return m.ScrollMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetScrollMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.ScrollMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetScrollMirrorObjectRelayerFee() string {
	if m != nil {
		return m.ScrollMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetScrollMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.ScrollMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetScrollMirrorGroupRelayerFee() string {
	if m != nil {
		return m.ScrollMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetScrollMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.ScrollMirrorGroupAckRelayerFee
	}
	return ""
}

func (m *Params) GetLineaMirrorBucketRelayerFee() string {
	if m != nil {
		return m.LineaMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetLineaMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.LineaMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetLineaMirrorObjectRelayerFee() string {
	if m != nil {
		return m.LineaMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetLineaMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.LineaMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetLineaMirrorGroupRelayerFee() string {
	if m != nil {
		return m.LineaMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetLineaMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.LineaMirrorGroupAckRelayerFee
	}
	return ""
}

func (m *Params) GetMantleMirrorBucketRelayerFee() string {
	if m != nil {
		return m.MantleMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetMantleMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.MantleMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetMantleMirrorObjectRelayerFee() string {
	if m != nil {
		return m.MantleMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetMantleMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.MantleMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetMantleMirrorGroupRelayerFee() string {
	if m != nil {
		return m.MantleMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetMantleMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.MantleMirrorGroupAckRelayerFee
	}
	return ""
}

func (m *Params) GetArbitrumMirrorBucketRelayerFee() string {
	if m != nil {
		return m.ArbitrumMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetArbitrumMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.ArbitrumMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetArbitrumMirrorObjectRelayerFee() string {
	if m != nil {
		return m.ArbitrumMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetArbitrumMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.ArbitrumMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetArbitrumMirrorGroupRelayerFee() string {
	if m != nil {
		return m.ArbitrumMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetArbitrumMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.ArbitrumMirrorGroupAckRelayerFee
	}
	return ""
}

func (m *Params) GetOptimismMirrorBucketRelayerFee() string {
	if m != nil {
		return m.OptimismMirrorBucketRelayerFee
	}
	return ""
}

func (m *Params) GetOptimismMirrorBucketAckRelayerFee() string {
	if m != nil {
		return m.OptimismMirrorBucketAckRelayerFee
	}
	return ""
}

func (m *Params) GetOptimismMirrorObjectRelayerFee() string {
	if m != nil {
		return m.OptimismMirrorObjectRelayerFee
	}
	return ""
}

func (m *Params) GetOptimismMirrorObjectAckRelayerFee() string {
	if m != nil {
		return m.OptimismMirrorObjectAckRelayerFee
	}
	return ""
}

func (m *Params) GetOptimismMirrorGroupRelayerFee() string {
	if m != nil {
		return m.OptimismMirrorGroupRelayerFee
	}
	return ""
}

func (m *Params) GetOptimismMirrorGroupAckRelayerFee() string {
	if m != nil {
		return m.OptimismMirrorGroupAckRelayerFee
	}
	return ""
}

// VersionedParams defines the parameters for the storage module with multi version, each version store with different timestamp.
type VersionedParams struct {
	// max_segment_size is the maximum size of a segment. default: 16M
	MaxSegmentSize uint64 `protobuf:"varint,1,opt,name=max_segment_size,json=maxSegmentSize,proto3" json:"max_segment_size,omitempty"`
	// redundant_data_check_num is the num of data chunks of EC redundancy algorithm
	RedundantDataChunkNum uint32 `protobuf:"varint,2,opt,name=redundant_data_chunk_num,json=redundantDataChunkNum,proto3" json:"redundant_data_chunk_num,omitempty"`
	// redundant_data_check_num is the num of parity chunks of EC redundancy algorithm
	RedundantParityChunkNum uint32 `protobuf:"varint,3,opt,name=redundant_parity_chunk_num,json=redundantParityChunkNum,proto3" json:"redundant_parity_chunk_num,omitempty"`
	// min_charge_size is the minimum charge size of the payload, objects smaller than this size will be charged as this size
	MinChargeSize uint64 `protobuf:"varint,4,opt,name=min_charge_size,json=minChargeSize,proto3" json:"min_charge_size,omitempty"`
}

func (m *VersionedParams) Reset()      { *m = VersionedParams{} }
func (*VersionedParams) ProtoMessage() {}
func (*VersionedParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_127b8b1511d84eca, []int{1}
}
func (m *VersionedParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VersionedParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VersionedParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VersionedParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionedParams.Merge(m, src)
}
func (m *VersionedParams) XXX_Size() int {
	return m.Size()
}
func (m *VersionedParams) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionedParams.DiscardUnknown(m)
}

var xxx_messageInfo_VersionedParams proto.InternalMessageInfo

func (m *VersionedParams) GetMaxSegmentSize() uint64 {
	if m != nil {
		return m.MaxSegmentSize
	}
	return 0
}

func (m *VersionedParams) GetRedundantDataChunkNum() uint32 {
	if m != nil {
		return m.RedundantDataChunkNum
	}
	return 0
}

func (m *VersionedParams) GetRedundantParityChunkNum() uint32 {
	if m != nil {
		return m.RedundantParityChunkNum
	}
	return 0
}

func (m *VersionedParams) GetMinChargeSize() uint64 {
	if m != nil {
		return m.MinChargeSize
	}
	return 0
}

func init() {
	proto.RegisterType((*Params)(nil), "greenfield.storage.Params")
	proto.RegisterType((*VersionedParams)(nil), "greenfield.storage.VersionedParams")
}

func init() { proto.RegisterFile("greenfield/storage/params.proto", fileDescriptor_127b8b1511d84eca) }

var fileDescriptor_127b8b1511d84eca = []byte{
	// 1258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x98, 0xdb, 0x72, 0xdb, 0x44,
	0x18, 0xc7, 0x23, 0x1a, 0x02, 0xdd, 0x92, 0x26, 0x88, 0xa4, 0x51, 0x4e, 0xb6, 0x9c, 0x13, 0xa6,
	0x80, 0x4d, 0xd3, 0x96, 0xf4, 0x34, 0x1d, 0x9a, 0xa4, 0x27, 0x4a, 0x1a, 0xd7, 0x85, 0x30, 0xc3,
	0x8d, 0x66, 0x2d, 0x6d, 0x9c, 0x25, 0x92, 0x56, 0xac, 0x24, 0xd7, 0xee, 0x53, 0x30, 0xc3, 0x0d,
	0x97, 0x3c, 0x4e, 0x2f, 0x7b, 0xc9, 0x15, 0x30, 0xc9, 0x8b, 0x30, 0xda, 0x55, 0x1c, 0xed, 0x41,
	0xce, 0x4d, 0xa7, 0xa3, 0xfd, 0xbe, 0x9f, 0x7f, 0xda, 0xff, 0x7e, 0xce, 0x78, 0x41, 0xb5, 0x4b,
	0x11, 0x0a, 0x0f, 0x31, 0xf2, 0xbd, 0x66, 0x9c, 0x10, 0x0a, 0xbb, 0xa8, 0x19, 0x41, 0x0a, 0x83,
	0xb8, 0x11, 0x51, 0x92, 0x10, 0xd3, 0x3c, 0x2f, 0x68, 0xe4, 0x05, 0x0b, 0x33, 0x5d, 0xd2, 0x25,
	0x6c, 0xb9, 0x99, 0xfd, 0x8f, 0x57, 0xae, 0xfc, 0x51, 0x03, 0x13, 0x2d, 0xd6, 0x6a, 0xfe, 0x08,
	0xa6, 0x7b, 0x88, 0xc6, 0x98, 0x84, 0xc8, 0x73, 0x38, 0xce, 0x32, 0x6c, 0xa3, 0x7e, 0x65, 0x73,
	0xb5, 0xa1, 0xf2, 0x1a, 0x07, 0x67, 0xb5, 0xbc, 0x7d, 0x7b, 0xfc, 0xdd, 0x3f, 0xd5, 0xb1, 0xf6,
	0x54, 0x4f, 0x7c, 0x6c, 0xd6, 0xc1, 0x74, 0x00, 0xfb, 0x4e, 0x04, 0x07, 0x3e, 0x81, 0x9e, 0x13,
	0xe3, 0xb7, 0xc8, 0xfa, 0xc0, 0x36, 0xea, 0xe3, 0xed, 0xab, 0x01, 0xec, 0xb7, 0xf8, 0xe3, 0xd7,
	0xf8, 0x2d, 0x32, 0xbf, 0x03, 0xcb, 0x9d, 0xd8, 0x75, 0x02, 0x4c, 0x29, 0xa1, 0x4e, 0x27, 0x75,
	0x8f, 0x51, 0xe2, 0x50, 0xe4, 0xc3, 0x01, 0xa2, 0xce, 0x21, 0x42, 0xd6, 0x25, 0xdb, 0xa8, 0x5f,
	0x6e, 0xcf, 0x77, 0x62, 0x77, 0x8f, 0xd5, 0x6c, 0xb3, 0x92, 0x36, 0xaf, 0x78, 0x82, 0x90, 0xf9,
	0x14, 0xd4, 0x54, 0x02, 0x74, 0x8f, 0x05, 0xca, 0x38, 0xa3, 0x2c, 0x49, 0x94, 0x47, 0xee, 0x71,
	0x01, 0x24, 0xaa, 0x90, 0xce, 0xaf, 0xc8, 0x15, 0x55, 0x3e, 0x94, 0x54, 0xf6, 0x59, 0x49, 0xa9,
	0x4a, 0x4e, 0x90, 0x55, 0x26, 0x24, 0x15, 0x4e, 0x11, 0x55, 0x1e, 0x82, 0xa5, 0x02, 0xa8, 0x4b,
	0x49, 0x1a, 0x09, 0x8c, 0x8f, 0x18, 0xc3, 0x1a, 0x32, 0x9e, 0x66, 0x15, 0x85, 0xfe, 0xc7, 0xc0,
	0x56, 0xfa, 0x65, 0x8f, 0x8f, 0x19, 0x63, 0x51, 0x64, 0x88, 0x1a, 0xb7, 0xc1, 0x5c, 0x16, 0x23,
	0xdf, 0xd3, 0xd8, 0x89, 0x10, 0x75, 0xa0, 0xeb, 0x92, 0x34, 0x4c, 0xac, 0xcb, 0xb6, 0x51, 0x9f,
	0x6c, 0xcf, 0x04, 0xb0, 0xcf, 0xb7, 0x32, 0x6e, 0x21, 0xfa, 0x88, 0xaf, 0x99, 0x0f, 0xc1, 0xa2,
	0x87, 0x63, 0x97, 0x84, 0x09, 0x0e, 0x53, 0xe4, 0xb0, 0x87, 0x38, 0xec, 0x3a, 0x6f, 0x70, 0xe8,
	0x91, 0x37, 0x16, 0x60, 0x07, 0x61, 0xbe, 0x50, 0xb2, 0x93, 0x57, 0xfc, 0xcc, 0x0a, 0xcc, 0x5b,
	0xe0, 0x5a, 0xb1, 0x3f, 0xdf, 0xc7, 0x00, 0xf6, 0xad, 0x2b, 0xac, 0x75, 0xa6, 0xb0, 0xca, 0x77,
	0x6f, 0x0f, 0xf6, 0xe5, 0xae, 0xfc, 0x20, 0x64, 0x5d, 0x9f, 0x28, 0x5d, 0xdc, 0x39, 0xeb, 0x7a,
	0x00, 0x16, 0x44, 0xd7, 0xf0, 0x10, 0xd3, 0x20, 0x7b, 0x55, 0x4c, 0x3c, 0x6b, 0xd2, 0x36, 0xea,
	0x97, 0xda, 0x96, 0xa0, 0xca, 0x0a, 0x5a, 0x6c, 0xdd, 0xbc, 0x03, 0x8a, 0x6b, 0x8e, 0x87, 0x7c,
	0x94, 0x60, 0x12, 0xb2, 0x4f, 0xbd, 0xca, 0x3e, 0xb5, 0xe8, 0xb4, 0x9b, 0x2f, 0x67, 0x9f, 0xbb,
	0x05, 0xac, 0x38, 0x81, 0x3e, 0x72, 0x22, 0xe2, 0x63, 0x77, 0xe0, 0xb8, 0x3e, 0x82, 0x61, 0x1a,
	0xb1, 0xce, 0x29, 0xd6, 0x39, 0xcb, 0xd6, 0x5b, 0x6c, 0x79, 0x87, 0xaf, 0x66, 0x8d, 0x77, 0xc1,
	0x7c, 0x80, 0x43, 0xe7, 0xb7, 0x94, 0x24, 0xd0, 0x49, 0x23, 0x0f, 0x26, 0xc8, 0xc1, 0x61, 0x82,
	0x68, 0x0f, 0xfa, 0xd6, 0x34, 0xff, 0xcc, 0x00, 0x87, 0xaf, 0xb2, 0xf5, 0x9f, 0xd8, 0xf2, 0xf3,
	0x7c, 0xd5, 0x6c, 0x81, 0x8d, 0x2c, 0x4e, 0x9f, 0xb8, 0xd0, 0x77, 0x7a, 0x98, 0x26, 0x29, 0xf4,
	0xf3, 0xc3, 0x11, 0xa6, 0xec, 0x9d, 0xf3, 0x5d, 0xb3, 0x3e, 0x65, 0xe9, 0xda, 0x01, 0xec, 0xff,
	0x90, 0x15, 0x1f, 0xf0, 0x5a, 0x76, 0x42, 0x5e, 0xa6, 0xd9, 0xcb, 0xf3, 0x0d, 0xcc, 0xce, 0x29,
	0x89, 0x46, 0x0c, 0xaf, 0xc9, 0xcf, 0x29, 0x89, 0x4a, 0x66, 0xf7, 0x31, 0xb0, 0x95, 0x7e, 0xf9,
	0x9c, 0x7e, 0xc6, 0xcf, 0xa9, 0xc8, 0x50, 0xc6, 0xe5, 0x1c, 0xa3, 0x19, 0xdc, 0x19, 0x51, 0x43,
	0x99, 0x5b, 0x41, 0xa3, 0x64, 0x6c, 0x67, 0x45, 0x0d, 0xdd, 0xd4, 0x3e, 0x00, 0x8b, 0xe7, 0x18,
	0x75, 0x68, 0xaf, 0x31, 0xc2, 0xdc, 0x19, 0x41, 0x9e, 0xd9, 0x1d, 0x50, 0x95, 0xbb, 0x65, 0x87,
	0x39, 0x46, 0x58, 0x10, 0x08, 0xa2, 0xc2, 0x33, 0x50, 0x8b, 0x88, 0x3f, 0xe8, 0x66, 0x67, 0xb0,
	0x34, 0x15, 0x8b, 0x61, 0x96, 0xf3, 0xc2, 0x92, 0x68, 0xf6, 0xc1, 0xba, 0x9e, 0x24, 0x4b, 0xcd,
	0x33, 0x9a, 0xad, 0xa1, 0x5d, 0xa4, 0xa6, 0x49, 0x6a, 0x41, 0xa3, 0xa6, 0xc4, 0xa5, 0xaa, 0x95,
	0x64, 0xb6, 0xa8, 0x51, 0xd3, 0x05, 0xf7, 0x04, 0xd8, 0x12, 0x50, 0x4d, 0x6f, 0x89, 0x7f, 0x6d,
	0x0b, 0x2c, 0x39, 0xc2, 0x3d, 0xb0, 0xa6, 0xe5, 0xc8, 0x5e, 0xcb, 0x8c, 0x55, 0x55, 0x59, 0x8a,
	0x56, 0xec, 0x52, 0xe2, 0xfb, 0x23, 0xb2, 0xac, 0x70, 0x2d, 0x5e, 0x57, 0x12, 0xe5, 0x1e, 0x58,
	0xd3, 0x72, 0x64, 0xad, 0x2a, 0xd7, 0x52, 0x59, 0x17, 0x68, 0x69, 0x72, 0xb4, 0x55, 0x2d, 0x25,
	0x46, 0x45, 0xab, 0x24, 0xc5, 0x9a, 0xaa, 0xa5, 0x0b, 0x71, 0x17, 0x54, 0x45, 0x9c, 0x9a, 0xe1,
	0x0a, 0x9f, 0xe1, 0x22, 0x49, 0x8e, 0xf0, 0x05, 0x58, 0xd5, 0x51, 0x64, 0xa7, 0x55, 0x46, 0xaa,
	0x28, 0x24, 0x45, 0xc9, 0xc7, 0x21, 0x82, 0x23, 0xf2, 0x5b, 0xe3, 0x4a, 0xac, 0xac, 0x24, 0xbe,
	0x17, 0x60, 0x55, 0x47, 0x91, 0x95, 0xd6, 0xb9, 0x92, 0x42, 0x1a, 0xad, 0xa4, 0xc9, 0x6e, 0x43,
	0x51, 0x52, 0xa2, 0x93, 0x95, 0x4a, 0x92, 0xfb, 0x5c, 0x51, 0xd2, 0x05, 0xb7, 0x0d, 0x2a, 0x02,
	0x4c, 0xcd, 0xad, 0xce, 0xbf, 0xf7, 0x0a, 0x1c, 0x39, 0xb6, 0xe7, 0x60, 0x45, 0xc3, 0x90, 0x7d,
	0xbe, 0xe0, 0xdf, 0x2e, 0x32, 0x47, 0x39, 0xde, 0x01, 0x0c, 0x13, 0x1f, 0x8d, 0x48, 0xed, 0x3a,
	0x3f, 0xde, 0xbc, 0xae, 0x7c, 0xea, 0xb4, 0x1c, 0x59, 0xea, 0x4b, 0x7e, 0xbc, 0x55, 0xd6, 0x05,
	0x5a, 0x9a, 0xe4, 0xbe, 0x52, 0xb5, 0x74, 0x53, 0xa7, 0xe5, 0xc8, 0x5a, 0x5f, 0xab, 0x5a, 0x25,
	0x53, 0x27, 0xe2, 0xd4, 0xf4, 0x1a, 0xfc, 0x3c, 0x15, 0x49, 0x9a, 0xa9, 0xd3, 0x51, 0x64, 0xa7,
	0x26, 0x3f, 0x4f, 0x0a, 0x49, 0x54, 0xfa, 0x1e, 0xac, 0x40, 0xda, 0xc1, 0x09, 0x4d, 0x83, 0x11,
	0x11, 0x7e, 0xc3, 0x59, 0x67, 0x95, 0x25, 0x21, 0xbe, 0x02, 0x1b, 0x25, 0x2c, 0xd9, 0xed, 0x06,
	0xe3, 0xd5, 0x74, 0xbc, 0x0b, 0xf5, 0x34, 0x51, 0x6e, 0xea, 0xf4, 0x94, 0x30, 0x35, 0x7a, 0x25,
	0x71, 0xde, 0xd4, 0xe9, 0xe9, 0x02, 0x7d, 0x06, 0x6a, 0x32, 0x52, 0x8d, 0xf4, 0x16, 0x1f, 0x24,
	0x91, 0x26, 0x87, 0xba, 0x0f, 0xd6, 0xf5, 0x24, 0xd9, 0xed, 0x36, 0xff, 0x33, 0xad, 0xa1, 0x29,
	0x3b, 0x47, 0xa2, 0x04, 0x07, 0x38, 0x1e, 0x15, 0xec, 0xb7, 0x7c, 0xe7, 0xce, 0x2a, 0xcb, 0x83,
	0x2d, 0x61, 0xc9, 0x76, 0x5b, 0x7c, 0xe7, 0x74, 0xbc, 0x0b, 0xf5, 0x34, 0xc1, 0xde, 0xd1, 0xe9,
	0xe9, 0x82, 0x2d, 0x61, 0xc9, 0x7a, 0x77, 0x75, 0x7a, 0x25, 0xc1, 0xca, 0x48, 0x35, 0xd8, 0x7b,
	0x3c, 0x58, 0x91, 0xa6, 0x09, 0x56, 0x4f, 0x92, 0xdd, 0xee, 0xf3, 0x60, 0x35, 0x34, 0x41, 0xed,
	0xde, 0xf8, 0x9f, 0x7f, 0x55, 0xc7, 0x56, 0xfe, 0x35, 0xc0, 0xd4, 0x81, 0xfe, 0x22, 0x21, 0x46,
	0xdd, 0x00, 0x85, 0x09, 0xbf, 0x48, 0x30, 0x86, 0x17, 0x09, 0xaf, 0xf9, 0x63, 0x76, 0x91, 0xb0,
	0x05, 0x2c, 0x8a, 0xbc, 0x34, 0xf4, 0x60, 0x98, 0x38, 0x1e, 0x4c, 0xa0, 0xe3, 0x1e, 0xa5, 0xe1,
	0x71, 0xf6, 0xcb, 0x86, 0x5d, 0x3d, 0x4c, 0xb6, 0x67, 0x87, 0xeb, 0xbb, 0x30, 0x81, 0x3b, 0xd9,
	0xea, 0xcb, 0x34, 0x30, 0xef, 0x83, 0x85, 0xf3, 0xc6, 0x08, 0x52, 0x9c, 0x0c, 0x0a, 0xad, 0x97,
	0x58, 0xeb, 0xdc, 0xb0, 0xa2, 0xc5, 0x0a, 0x86, 0xcd, 0x1b, 0x60, 0x2a, 0xfb, 0x35, 0xe6, 0x1e,
	0x41, 0xda, 0x45, 0x5c, 0x6f, 0x9c, 0xe9, 0x4d, 0x06, 0x38, 0xdc, 0x61, 0x4f, 0x33, 0x3b, 0xfe,
	0x86, 0xdb, 0xbb, 0xef, 0x4e, 0x2a, 0xc6, 0xfb, 0x93, 0x8a, 0xf1, 0xdf, 0x49, 0xc5, 0xf8, 0xfd,
	0xb4, 0x32, 0xf6, 0xfe, 0xb4, 0x32, 0xf6, 0xf7, 0x69, 0x65, 0xec, 0x97, 0xeb, 0x5d, 0x9c, 0x1c,
	0xa5, 0x9d, 0x86, 0x4b, 0x82, 0x26, 0xea, 0x05, 0x24, 0xce, 0xff, 0xed, 0xdd, 0xd8, 0x6c, 0xf6,
	0x87, 0xd7, 0x3d, 0xc9, 0x20, 0x42, 0x71, 0x67, 0x82, 0x5d, 0xe2, 0xdc, 0xfc, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0x54, 0xe5, 0x61, 0x70, 0x11, 0x12, 0x00, 0x00,
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OptimismMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.OptimismMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.OptimismMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OptimismMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xda
	}
	if len(m.OptimismMirrorGroupRelayerFee) > 0 {
		i -= len(m.OptimismMirrorGroupRelayerFee)
		copy(dAtA[i:], m.OptimismMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OptimismMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd2
	}
	if len(m.OptimismMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.OptimismMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.OptimismMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OptimismMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xca
	}
	if len(m.OptimismMirrorObjectRelayerFee) > 0 {
		i -= len(m.OptimismMirrorObjectRelayerFee)
		copy(dAtA[i:], m.OptimismMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OptimismMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if len(m.OptimismMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.OptimismMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.OptimismMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OptimismMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xba
	}
	if len(m.OptimismMirrorBucketRelayerFee) > 0 {
		i -= len(m.OptimismMirrorBucketRelayerFee)
		copy(dAtA[i:], m.OptimismMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OptimismMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if len(m.ArbitrumMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.ArbitrumMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.ArbitrumMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ArbitrumMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if len(m.ArbitrumMirrorGroupRelayerFee) > 0 {
		i -= len(m.ArbitrumMirrorGroupRelayerFee)
		copy(dAtA[i:], m.ArbitrumMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ArbitrumMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if len(m.ArbitrumMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.ArbitrumMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.ArbitrumMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ArbitrumMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	if len(m.ArbitrumMirrorObjectRelayerFee) > 0 {
		i -= len(m.ArbitrumMirrorObjectRelayerFee)
		copy(dAtA[i:], m.ArbitrumMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ArbitrumMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x92
	}
	if len(m.ArbitrumMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.ArbitrumMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.ArbitrumMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ArbitrumMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x8a
	}
	if len(m.ArbitrumMirrorBucketRelayerFee) > 0 {
		i -= len(m.ArbitrumMirrorBucketRelayerFee)
		copy(dAtA[i:], m.ArbitrumMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ArbitrumMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x82
	}
	if len(m.MantleMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.MantleMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.MantleMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.MantleMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xfa
	}
	if len(m.MantleMirrorGroupRelayerFee) > 0 {
		i -= len(m.MantleMirrorGroupRelayerFee)
		copy(dAtA[i:], m.MantleMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.MantleMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xf2
	}
	if len(m.MantleMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.MantleMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.MantleMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.MantleMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xea
	}
	if len(m.MantleMirrorObjectRelayerFee) > 0 {
		i -= len(m.MantleMirrorObjectRelayerFee)
		copy(dAtA[i:], m.MantleMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.MantleMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xe2
	}
	if len(m.MantleMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.MantleMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.MantleMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.MantleMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xda
	}
	if len(m.MantleMirrorBucketRelayerFee) > 0 {
		i -= len(m.MantleMirrorBucketRelayerFee)
		copy(dAtA[i:], m.MantleMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.MantleMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xd2
	}
	if len(m.LineaMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.LineaMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.LineaMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.LineaMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xca
	}
	if len(m.LineaMirrorGroupRelayerFee) > 0 {
		i -= len(m.LineaMirrorGroupRelayerFee)
		copy(dAtA[i:], m.LineaMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.LineaMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc2
	}
	if len(m.LineaMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.LineaMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.LineaMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.LineaMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xba
	}
	if len(m.LineaMirrorObjectRelayerFee) > 0 {
		i -= len(m.LineaMirrorObjectRelayerFee)
		copy(dAtA[i:], m.LineaMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.LineaMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xb2
	}
	if len(m.LineaMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.LineaMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.LineaMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.LineaMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xaa
	}
	if len(m.LineaMirrorBucketRelayerFee) > 0 {
		i -= len(m.LineaMirrorBucketRelayerFee)
		copy(dAtA[i:], m.LineaMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.LineaMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xa2
	}
	if len(m.ScrollMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.ScrollMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.ScrollMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ScrollMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x9a
	}
	if len(m.ScrollMirrorGroupRelayerFee) > 0 {
		i -= len(m.ScrollMirrorGroupRelayerFee)
		copy(dAtA[i:], m.ScrollMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ScrollMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x92
	}
	if len(m.ScrollMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.ScrollMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.ScrollMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ScrollMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x8a
	}
	if len(m.ScrollMirrorObjectRelayerFee) > 0 {
		i -= len(m.ScrollMirrorObjectRelayerFee)
		copy(dAtA[i:], m.ScrollMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ScrollMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	if len(m.ScrollMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.ScrollMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.ScrollMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ScrollMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	if len(m.ScrollMirrorBucketRelayerFee) > 0 {
		i -= len(m.ScrollMirrorBucketRelayerFee)
		copy(dAtA[i:], m.ScrollMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.ScrollMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if len(m.PolygonMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.PolygonMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.PolygonMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.PolygonMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	if len(m.PolygonMirrorGroupRelayerFee) > 0 {
		i -= len(m.PolygonMirrorGroupRelayerFee)
		copy(dAtA[i:], m.PolygonMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.PolygonMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	if len(m.PolygonMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.PolygonMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.PolygonMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.PolygonMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	if len(m.PolygonMirrorObjectRelayerFee) > 0 {
		i -= len(m.PolygonMirrorObjectRelayerFee)
		copy(dAtA[i:], m.PolygonMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.PolygonMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if len(m.PolygonMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.PolygonMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.PolygonMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.PolygonMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if len(m.PolygonMirrorBucketRelayerFee) > 0 {
		i -= len(m.PolygonMirrorBucketRelayerFee)
		copy(dAtA[i:], m.PolygonMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.PolygonMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.OpMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.OpMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.OpMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OpMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if len(m.OpMirrorGroupRelayerFee) > 0 {
		i -= len(m.OpMirrorGroupRelayerFee)
		copy(dAtA[i:], m.OpMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OpMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if len(m.OpMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.OpMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.OpMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OpMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.OpMirrorObjectRelayerFee) > 0 {
		i -= len(m.OpMirrorObjectRelayerFee)
		copy(dAtA[i:], m.OpMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OpMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.OpMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.OpMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.OpMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OpMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.OpMirrorBucketRelayerFee) > 0 {
		i -= len(m.OpMirrorBucketRelayerFee)
		copy(dAtA[i:], m.OpMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.OpMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.MaxLocalVirtualGroupNumPerBucket != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.MaxLocalVirtualGroupNumPerBucket))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.MinQuotaUpdateInterval != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.MinQuotaUpdateInterval))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.StalePolicyCleanupMax != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.StalePolicyCleanupMax))
		i--
		dAtA[i] = 0x78
	}
	if m.DiscontinueDeletionMax != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.DiscontinueDeletionMax))
		i--
		dAtA[i] = 0x70
	}
	if m.DiscontinueConfirmPeriod != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.DiscontinueConfirmPeriod))
		i--
		dAtA[i] = 0x68
	}
	if m.DiscontinueBucketMax != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.DiscontinueBucketMax))
		i--
		dAtA[i] = 0x60
	}
	if m.DiscontinueObjectMax != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.DiscontinueObjectMax))
		i--
		dAtA[i] = 0x58
	}
	if m.DiscontinueCountingWindow != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.DiscontinueCountingWindow))
		i--
		dAtA[i] = 0x50
	}
	if m.MaxBucketsPerAccount != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.MaxBucketsPerAccount))
		i--
		dAtA[i] = 0x48
	}
	if len(m.BscMirrorGroupAckRelayerFee) > 0 {
		i -= len(m.BscMirrorGroupAckRelayerFee)
		copy(dAtA[i:], m.BscMirrorGroupAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.BscMirrorGroupAckRelayerFee)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.BscMirrorGroupRelayerFee) > 0 {
		i -= len(m.BscMirrorGroupRelayerFee)
		copy(dAtA[i:], m.BscMirrorGroupRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.BscMirrorGroupRelayerFee)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BscMirrorObjectAckRelayerFee) > 0 {
		i -= len(m.BscMirrorObjectAckRelayerFee)
		copy(dAtA[i:], m.BscMirrorObjectAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.BscMirrorObjectAckRelayerFee)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BscMirrorObjectRelayerFee) > 0 {
		i -= len(m.BscMirrorObjectRelayerFee)
		copy(dAtA[i:], m.BscMirrorObjectRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.BscMirrorObjectRelayerFee)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BscMirrorBucketAckRelayerFee) > 0 {
		i -= len(m.BscMirrorBucketAckRelayerFee)
		copy(dAtA[i:], m.BscMirrorBucketAckRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.BscMirrorBucketAckRelayerFee)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BscMirrorBucketRelayerFee) > 0 {
		i -= len(m.BscMirrorBucketRelayerFee)
		copy(dAtA[i:], m.BscMirrorBucketRelayerFee)
		i = encodeVarintParams(dAtA, i, uint64(len(m.BscMirrorBucketRelayerFee)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MaxPayloadSize != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.MaxPayloadSize))
		i--
		dAtA[i] = 0x10
	}
	{
		size, err := m.VersionedParams.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintParams(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *VersionedParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VersionedParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VersionedParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinChargeSize != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.MinChargeSize))
		i--
		dAtA[i] = 0x20
	}
	if m.RedundantParityChunkNum != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.RedundantParityChunkNum))
		i--
		dAtA[i] = 0x18
	}
	if m.RedundantDataChunkNum != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.RedundantDataChunkNum))
		i--
		dAtA[i] = 0x10
	}
	if m.MaxSegmentSize != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.MaxSegmentSize))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.VersionedParams.Size()
	n += 1 + l + sovParams(uint64(l))
	if m.MaxPayloadSize != 0 {
		n += 1 + sovParams(uint64(m.MaxPayloadSize))
	}
	l = len(m.BscMirrorBucketRelayerFee)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	l = len(m.BscMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	l = len(m.BscMirrorObjectRelayerFee)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	l = len(m.BscMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	l = len(m.BscMirrorGroupRelayerFee)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	l = len(m.BscMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 1 + l + sovParams(uint64(l))
	}
	if m.MaxBucketsPerAccount != 0 {
		n += 1 + sovParams(uint64(m.MaxBucketsPerAccount))
	}
	if m.DiscontinueCountingWindow != 0 {
		n += 1 + sovParams(uint64(m.DiscontinueCountingWindow))
	}
	if m.DiscontinueObjectMax != 0 {
		n += 1 + sovParams(uint64(m.DiscontinueObjectMax))
	}
	if m.DiscontinueBucketMax != 0 {
		n += 1 + sovParams(uint64(m.DiscontinueBucketMax))
	}
	if m.DiscontinueConfirmPeriod != 0 {
		n += 1 + sovParams(uint64(m.DiscontinueConfirmPeriod))
	}
	if m.DiscontinueDeletionMax != 0 {
		n += 1 + sovParams(uint64(m.DiscontinueDeletionMax))
	}
	if m.StalePolicyCleanupMax != 0 {
		n += 1 + sovParams(uint64(m.StalePolicyCleanupMax))
	}
	if m.MinQuotaUpdateInterval != 0 {
		n += 2 + sovParams(uint64(m.MinQuotaUpdateInterval))
	}
	if m.MaxLocalVirtualGroupNumPerBucket != 0 {
		n += 2 + sovParams(uint64(m.MaxLocalVirtualGroupNumPerBucket))
	}
	l = len(m.OpMirrorBucketRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OpMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OpMirrorObjectRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OpMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OpMirrorGroupRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OpMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.PolygonMirrorBucketRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.PolygonMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.PolygonMirrorObjectRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.PolygonMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.PolygonMirrorGroupRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.PolygonMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ScrollMirrorBucketRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ScrollMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ScrollMirrorObjectRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ScrollMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ScrollMirrorGroupRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ScrollMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.LineaMirrorBucketRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.LineaMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.LineaMirrorObjectRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.LineaMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.LineaMirrorGroupRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.LineaMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.MantleMirrorBucketRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.MantleMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.MantleMirrorObjectRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.MantleMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.MantleMirrorGroupRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.MantleMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ArbitrumMirrorBucketRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ArbitrumMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ArbitrumMirrorObjectRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ArbitrumMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ArbitrumMirrorGroupRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.ArbitrumMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OptimismMirrorBucketRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OptimismMirrorBucketAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OptimismMirrorObjectRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OptimismMirrorObjectAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OptimismMirrorGroupRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	l = len(m.OptimismMirrorGroupAckRelayerFee)
	if l > 0 {
		n += 2 + l + sovParams(uint64(l))
	}
	return n
}

func (m *VersionedParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MaxSegmentSize != 0 {
		n += 1 + sovParams(uint64(m.MaxSegmentSize))
	}
	if m.RedundantDataChunkNum != 0 {
		n += 1 + sovParams(uint64(m.RedundantDataChunkNum))
	}
	if m.RedundantParityChunkNum != 0 {
		n += 1 + sovParams(uint64(m.RedundantParityChunkNum))
	}
	if m.MinChargeSize != 0 {
		n += 1 + sovParams(uint64(m.MinChargeSize))
	}
	return n
}

func sovParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozParams(x uint64) (n int) {
	return sovParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionedParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.VersionedParams.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPayloadSize", wireType)
			}
			m.MaxPayloadSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPayloadSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BscMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BscMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BscMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BscMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BscMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BscMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BscMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BscMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BscMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BscMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BscMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BscMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxBucketsPerAccount", wireType)
			}
			m.MaxBucketsPerAccount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxBucketsPerAccount |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscontinueCountingWindow", wireType)
			}
			m.DiscontinueCountingWindow = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiscontinueCountingWindow |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscontinueObjectMax", wireType)
			}
			m.DiscontinueObjectMax = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiscontinueObjectMax |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscontinueBucketMax", wireType)
			}
			m.DiscontinueBucketMax = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiscontinueBucketMax |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscontinueConfirmPeriod", wireType)
			}
			m.DiscontinueConfirmPeriod = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiscontinueConfirmPeriod |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscontinueDeletionMax", wireType)
			}
			m.DiscontinueDeletionMax = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DiscontinueDeletionMax |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StalePolicyCleanupMax", wireType)
			}
			m.StalePolicyCleanupMax = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StalePolicyCleanupMax |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinQuotaUpdateInterval", wireType)
			}
			m.MinQuotaUpdateInterval = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinQuotaUpdateInterval |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLocalVirtualGroupNumPerBucket", wireType)
			}
			m.MaxLocalVirtualGroupNumPerBucket = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxLocalVirtualGroupNumPerBucket |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolygonMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolygonMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolygonMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolygonMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolygonMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolygonMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolygonMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolygonMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolygonMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolygonMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolygonMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolygonMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScrollMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScrollMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScrollMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScrollMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScrollMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScrollMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScrollMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScrollMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScrollMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScrollMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 35:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScrollMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScrollMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 36:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LineaMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LineaMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 37:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LineaMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LineaMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 38:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LineaMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LineaMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 39:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LineaMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LineaMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LineaMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LineaMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 41:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LineaMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LineaMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 42:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MantleMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MantleMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 43:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MantleMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MantleMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 44:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MantleMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MantleMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 45:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MantleMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MantleMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 46:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MantleMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MantleMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 47:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MantleMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MantleMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 48:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArbitrumMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ArbitrumMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 49:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArbitrumMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ArbitrumMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArbitrumMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ArbitrumMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArbitrumMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ArbitrumMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArbitrumMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ArbitrumMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArbitrumMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ArbitrumMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptimismMirrorBucketRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OptimismMirrorBucketRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptimismMirrorBucketAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OptimismMirrorBucketAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptimismMirrorObjectRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OptimismMirrorObjectRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptimismMirrorObjectAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OptimismMirrorObjectAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 58:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptimismMirrorGroupRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OptimismMirrorGroupRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 59:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptimismMirrorGroupAckRelayerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OptimismMirrorGroupAckRelayerFee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VersionedParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VersionedParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VersionedParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxSegmentSize", wireType)
			}
			m.MaxSegmentSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxSegmentSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedundantDataChunkNum", wireType)
			}
			m.RedundantDataChunkNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedundantDataChunkNum |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedundantParityChunkNum", wireType)
			}
			m.RedundantParityChunkNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedundantParityChunkNum |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinChargeSize", wireType)
			}
			m.MinChargeSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinChargeSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupParams = fmt.Errorf("proto: unexpected end of group")
)
